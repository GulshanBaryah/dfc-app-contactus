@model DateViewModel

@{
    var hintId = string.Empty;
    var showErrorClass = string.Empty;
    var errorKeys = new[] { ViewData.ModelMetadata.PropertyName, Html.NameFor(model => model.Value), Html.NameFor(model => model.Day), Html.NameFor(model => model.Month), Html.NameFor(model => model.Year), Html.NameFor(model => model.Hour), Html.NameFor(model => model.Minute) };

    foreach (var errorKey in errorKeys)
    {
        if (ViewData.ModelState.Keys.Contains(errorKey))
        {
            if (ViewData.ModelState[errorKey] != null && ViewData.ModelState[errorKey].Errors.Any())
            {
                showErrorClass = "govuk-form-group--error";
                break;
            }
        }
    }
}

<div class="govuk-form-group @showErrorClass">
    <fieldset class="govuk-fieldset" role="group" aria-describedby="@ViewData.ModelMetadata.Name-hint">
        @if (!string.IsNullOrWhiteSpace(ViewData.ModelMetadata.Placeholder))
        {
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                <h1 class="govuk-fieldset__heading">
                    @ViewData.ModelMetadata.Placeholder
                </h1>
            </legend>
        }

        @if (!string.IsNullOrWhiteSpace(ViewData.ModelMetadata.Description))
        {
            hintId = ViewData.ModelMetadata.Name + "-hint";

            <label class="govuk-label">@ViewData.ModelMetadata.Description</label>
        }

        @Html.ValidationMessageFor(model => model, string.Empty, new { @class = "govuk-error-message", @id = ViewData.ModelMetadata.Name + "-error" })
        @Html.ValidationMessageFor(model => model.Day, string.Empty, new { @class = "govuk-error-message", @id = Html.NameFor(model => model.Day) + "-error" })
        @Html.ValidationMessageFor(model => model.Month, string.Empty, new { @class = "govuk-error-message", @id = Html.NameFor(model => model.Month) + "-error" })
        @Html.ValidationMessageFor(model => model.Year, string.Empty, new { @class = "govuk-error-message", @id = Html.NameFor(model => model.Year) + "-error" })

        @if (Model != null && Model.IncludeTimeValue)
        {
            @Html.ValidationMessageFor(model => model.Minute, string.Empty, new { @class = "govuk-error-message", @id = Html.NameFor(model => model.Minute) + "-error" })
            @Html.ValidationMessageFor(model => model.Hour, string.Empty, new { @class = "govuk-error-message", @id = Html.NameFor(model => model.Hour) + "-error" })
        }

        <div class="govuk-date-input" id="@ViewData.ModelMetadata.Name">
            <div class="govuk-date-input__item">
                <div class="govuk-form-group">
                    @Html.LabelFor(model => model.Day, new { @class = "govuk-label govuk-date-input__label" })
                    @Html.TextBoxFor(model => model.Day, new
                    {
                        @class = "govuk-input govuk-date-input__input govuk-input--width-2",
                        title = ViewData.ModelMetadata.Description,
                        data_toggle = "tooltip",
                        data_placement = "bottom",
                        autocomplete = "off",
                        aria_describedby = hintId,
                        type = "text",
                        pattern = "[0-9]*",
                        inputmode = "numeric"
                    })
                </div>
            </div>
            <div class="govuk-date-input__item">
                <div class="govuk-form-group">
                    @Html.LabelFor(model => model.Month, new { @class = "govuk-label govuk-date-input__label" })
                    @Html.TextBoxFor(model => model.Month, new
                    {
                        @class = "govuk-input govuk-date-input__input govuk-input--width-2",
                        title = ViewData.ModelMetadata.Description,
                        data_toggle = "tooltip",
                        data_placement = "bottom",
                        autocomplete = "off",
                        aria_describedby = hintId,
                        type = "text",
                        pattern = "[0-9]*",
                        inputmode = "numeric"
                    })
                </div>
            </div>
            <div class="govuk-date-input__item">
                <div class="govuk-form-group">
                    @Html.LabelFor(model => model.Year, new { @class = "govuk-label govuk-date-input__label" })
                    @Html.TextBoxFor(model => model.Year, new
                    {
                        @class = "govuk-input govuk-date-input__input govuk-input--width-4",
                        title = ViewData.ModelMetadata.Description,
                        data_toggle = "tooltip",
                        data_placement = "bottom",
                        autocomplete = "off",
                        aria_describedby = hintId,
                        type = "text",
                        pattern = "[0-9]*",
                        inputmode = "numeric"
                    })
                </div>
            </div>

            @if (Model != null && Model.IncludeTimeValue)
            {
                <div class="govuk-date-input__item">
                    <div class="govuk-form-group">
                        @Html.LabelFor(model => model.Hour, new { @class = "govuk-label govuk-date-input__label" })
                        @Html.TextBoxFor(model => model.Hour, new
                        {
                            @class = "govuk-input govuk-date-input__input govuk-input--width-2",
                            title = ViewData.ModelMetadata.Description,
                            data_toggle = "tooltip",
                            data_placement = "bottom",
                            autocomplete = "off",
                            aria_describedby = hintId,
                            type = "text",
                            pattern = "[0-9]*",
                            inputmode = "numeric"
                        })
                    </div>
                </div>
                <div class="govuk-date-input__item">
                    <div class="govuk-form-group">
                        @Html.LabelFor(model => model.Minute, new { @class = "govuk-label govuk-date-input__label" })
                        @Html.TextBoxFor(model => model.Minute, new
                        {
                            @class = "govuk-input govuk-date-input__input govuk-input--width-2",
                            title = ViewData.ModelMetadata.Description,
                            data_toggle = "tooltip",
                            data_placement = "bottom",
                            autocomplete = "off",
                            aria_describedby = hintId,
                            type = "text",
                            pattern = "[0-9]*",
                            inputmode = "numeric"
                        })
                    </div>
                </div>
            }
        </div>
    </fieldset>
</div>