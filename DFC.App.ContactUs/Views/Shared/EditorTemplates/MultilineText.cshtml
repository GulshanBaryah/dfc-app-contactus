@model string
@using System.ComponentModel.DataAnnotations

<div class="govuk-form-group @(ViewData.ModelState.Keys.Contains(ViewData.ModelMetadata.PropertyName) ? "govuk-form-group--error" : string.Empty)">
    @{
        var hintId = "";
        var member = ViewData.ModelMetadata.ContainerType.GetMember(ViewData.ModelMetadata.PropertyName);
        var strLenAttr = member[0].GetCustomAttributes(typeof(StringLengthAttribute), false).Cast<StringLengthAttribute>().FirstOrDefault();
    }

    @Html.LabelFor(model => model, new { @class = "govuk-label" })

    @if (!string.IsNullOrWhiteSpace(ViewData.ModelMetadata.Description))
    {
        hintId = ViewData.ModelMetadata.Name + "-hint";

        <span id="@hintId" class="govuk-hint">
            @ViewData.ModelMetadata.Description
        </span>
    }

    @Html.ValidationMessageFor(model => model, string.Empty, new { @class = "govuk-error-message", @id = ViewData.ModelMetadata.Name + "-error" })

    @Html.TextAreaFor(model => model, new
    {
        @class = "govuk-textarea govuk-js-character-count",
        title = ViewData.ModelMetadata.Description,
        placeholder = ViewData.ModelMetadata.Placeholder,
        data_toggle = "tooltip",
        data_placement = "bottom",
        autocomplete = "off",
        aria_describedby = hintId,
        rows = 5,
        cols = 20
    })

    @if (strLenAttr != null)
    {
        <span id="@ViewData.ModelMetadata.Name-info" class="govuk-hint govuk-character-count__message" aria-live="polite">You have @strLenAttr.MaximumLength characters remaining</span>
    }
</div>
